@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 222 15% 12%;

  --border: 220 8% 88%;

  --card: 0 0% 100%;

  --card-foreground: 222 15% 12%;

  --card-border: 220 8% 93%;

  --sidebar: 220 10% 96%;

  --sidebar-foreground: 222 15% 12%;

  --sidebar-border: 220 8% 91%;

  --sidebar-primary: 220 90% 48%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 220 15% 92%;

  --sidebar-accent-foreground: 222 15% 12%;

  --sidebar-ring: 220 90% 48%;

  --popover: 220 10% 94%;

  --popover-foreground: 222 15% 12%;

  --popover-border: 220 8% 89%;

  --primary: 220 90% 48%;

  --primary-foreground: 0 0% 98%;

  --secondary: 220 10% 90%;

  --secondary-foreground: 222 15% 12%;

  --muted: 220 12% 92%;

  --muted-foreground: 0 0% 40%;

  --accent: 160 15% 88%;

  --accent-foreground: 222 15% 12%;

  --destructive: 0 84% 45%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 12% 75%;
  --ring: 220 90% 48%;
  --chart-1: 220 90% 48%;
  --chart-2: 160 70% 42%;
  --chart-3: 280 65% 55%;
  --chart-4: 30 80% 50%;
  --chart-5: 340 75% 50%;

  --font-sans: 'Inter', system-ui, -apple-system, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: 'Fira Code', Menlo, monospace;
  --font-accent: 'Space Grotesk', sans-serif;
  --radius: .75rem;
  --shadow-2xs: 0px 1px 2px 0px hsl(220 15% 15% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(220 15% 15% / 0.08);
  --shadow-sm: 0px 2px 4px 0px hsl(220 15% 15% / 0.06), 0px 1px 2px -1px hsl(220 15% 15% / 0.08);
  --shadow: 0px 4px 6px -1px hsl(220 15% 15% / 0.08), 0px 2px 4px -2px hsl(220 15% 15% / 0.08);
  --shadow-md: 0px 6px 12px -2px hsl(220 15% 15% / 0.10), 0px 3px 6px -3px hsl(220 15% 15% / 0.10);
  --shadow-lg: 0px 10px 20px -4px hsl(220 15% 15% / 0.12), 0px 4px 8px -4px hsl(220 15% 15% / 0.10);
  --shadow-xl: 0px 20px 30px -6px hsl(220 15% 15% / 0.14), 0px 8px 12px -6px hsl(220 15% 15% / 0.12);
  --shadow-2xl: 0px 30px 50px -12px hsl(220 15% 15% / 0.18);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 222 15% 8%;

  --foreground: 0 0% 98%;

  --border: 222 12% 18%;

  --card: 222 15% 12%;

  --card-foreground: 0 0% 98%;

  --card-border: 222 12% 16%;

  --sidebar: 222 15% 10%;

  --sidebar-foreground: 0 0% 98%;

  --sidebar-border: 222 12% 14%;

  --sidebar-primary: 220 90% 56%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 222 15% 16%;

  --sidebar-accent-foreground: 0 0% 98%;

  --sidebar-ring: 220 90% 56%;

  --popover: 222 15% 14%;

  --popover-foreground: 0 0% 98%;

  --popover-border: 222 12% 18%;

  --primary: 220 90% 56%;

  --primary-foreground: 0 0% 98%;

  --secondary: 222 15% 18%;

  --secondary-foreground: 0 0% 98%;

  --muted: 222 12% 16%;

  --muted-foreground: 0 0% 70%;

  --accent: 160 12% 18%;

  --accent-foreground: 0 0% 98%;

  --destructive: 0 84% 45%;

  --destructive-foreground: 0 0% 98%;

  --input: 222 15% 35%;
  --ring: 220 90% 56%;
  --chart-1: 220 90% 56%;
  --chart-2: 160 70% 45%;
  --chart-3: 280 65% 60%;
  --chart-4: 30 80% 55%;
  --chart-5: 340 75% 55%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.15);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.20);
  --shadow-sm: 0px 2px 4px 0px hsl(0 0% 0% / 0.18), 0px 1px 2px -1px hsl(0 0% 0% / 0.20);
  --shadow: 0px 4px 6px -1px hsl(0 0% 0% / 0.22), 0px 2px 4px -2px hsl(0 0% 0% / 0.20);
  --shadow-md: 0px 6px 12px -2px hsl(0 0% 0% / 0.25), 0px 3px 6px -3px hsl(0 0% 0% / 0.24);
  --shadow-lg: 0px 10px 20px -4px hsl(0 0% 0% / 0.28), 0px 4px 8px -4px hsl(0 0% 0% / 0.26);
  --shadow-xl: 0px 20px 30px -6px hsl(0 0% 0% / 0.32), 0px 8px 12px -6px hsl(0 0% 0% / 0.30);
  --shadow-2xl: 0px 30px 50px -12px hsl(0 0% 0% / 0.40);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }

  .bg-grid-pattern {
    background-image: 
      linear-gradient(to right, hsl(var(--border)) 1px, transparent 1px),
      linear-gradient(to bottom, hsl(var(--border)) 1px, transparent 1px);
    background-size: 40px 40px;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
  
  /* Premium animations and effects */
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes slide-in-right {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 20px rgba(var(--primary), 0.1);
    }
    50% {
      box-shadow: 0 0 30px rgba(var(--primary), 0.2);
    }
  }
  
  .animate-fade-in-up {
    animation: fade-in-up 0.6s ease-out forwards;
  }
  
  .animate-slide-in-right {
    animation: slide-in-right 0.6s ease-out forwards;
  }
  
  /* Enhanced hover effects for cards */
  .hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  
  .hover-lift:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
  }
  
  /* Button hover effects with scale */
  .btn-scale {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }
  
  .btn-scale:hover {
    transform: scale(1.02);
  }
  
  .btn-scale:active {
    transform: scale(0.98);
  }
  
  /* Glassmorphism effect */
  .glass-effect {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
  
  .dark .glass-effect {
    background: rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  /* Gradient text */
  .gradient-text {
    background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--chart-2)) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  /* Smooth underline animation */
  .underline-animation {
    position: relative;
    display: inline-block;
  }
  
  .underline-animation::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background: hsl(var(--primary));
    transition: width 0.3s ease;
  }
  
  .underline-animation:hover::after {
    width: 100%;
  }
  
  /* Glow effect on focus */
  .focus-glow:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(var(--primary), 0.2);
  }
  
  /* Shimmer effect for loading states */
  @keyframes shimmer {
    0% {
      background-position: -1000px 0;
    }
    100% {
      background-position: 1000px 0;
    }
  }
  
  .shimmer {
    background: linear-gradient(
      to right,
      hsl(var(--muted)) 0%,
      hsl(var(--muted-foreground) / 0.1) 20%,
      hsl(var(--muted)) 40%,
      hsl(var(--muted)) 100%
    );
    background-size: 1000px 100%;
    animation: shimmer 2s infinite linear;
  }
  
  /* Smooth scroll behavior */
  html {
    scroll-behavior: smooth;
  }
  
  /* Enhanced card shadows */
  .card-shadow {
    box-shadow: var(--shadow-sm);
    transition: box-shadow 0.3s ease, transform 0.3s ease;
  }
  
  .card-shadow:hover {
    box-shadow: var(--shadow-lg);
    transform: translateY(-2px);
  }
  
  /* Premium gradient backgrounds */
  .gradient-bg-1 {
    background: linear-gradient(135deg, hsl(var(--primary) / 0.1) 0%, hsl(var(--chart-2) / 0.1) 100%);
  }
  
  .gradient-bg-2 {
    background: linear-gradient(135deg, hsl(var(--chart-2) / 0.1) 0%, hsl(var(--chart-3) / 0.1) 100%);
  }
  
  /* Animated gradient border */
  .gradient-border {
    position: relative;
    background: hsl(var(--background));
    z-index: 0;
  }
  
  .gradient-border::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--chart-2)));
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    z-index: -1;
  }
}